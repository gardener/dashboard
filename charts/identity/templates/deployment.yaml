apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: identity
  namespace: {{ .Release.Namespace }}
  labels:
    app: identity
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: identity
      release: "{{ .Release.Name }}"
  template:
    metadata:
      annotations:
        checksum/configmap-identity-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.kubeconfig }}
        checksum/secret-identity-kubeconfig: {{ include (print $.Template.BasePath "/secret-kubeconfig.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app: identity
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            items:
            - key: config.yaml
              path: config.yaml
            name: identity-configmap
        {{- if .Values.kubeconfig }}
        - name: kubeconfig
          secret:
            secretName: identity-kubeconfig
        {{- end }}
      {{- if .Values.kubeconfig }}
      automountServiceAccountToken: false
      {{- else }}
      serviceAccountName: identity
      {{- end }}
      containers:
        - name: dex
          command:
            - /usr/local/bin/dex
            - serve
            - /etc/dex/config.yaml
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          dnsPolicy: ClusterFirst
          terminationGracePeriodSeconds: 30
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: {{ .Values.containerPort }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/dex
            name: config
          {{- if .Values.kubeconfig }}
          - mountPath: /etc/kubeconfig
            name: kubeconfig
          {{- end }}
