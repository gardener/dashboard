# Default values for gardener-dashboard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: eu.gcr.io/gardener-project/gardener/dashboard
  tag: latest
  pullPolicy: Always

logLevel: debug
apiServerUrl: https://api.example.org
containerPort: 8080
servicePort: 8080
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
hosts:
  - dashboard.ingress.example.org
  - dashboard.example.org
ingress:
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-port-in-redirects: "true"
    kubernetes.io/ingress.class: nginx
tls:
  crt: |
    -----BEGIN CERTIFICATE-----
    Li4u
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    Li4u
    -----END CERTIFICATE-----
  key: |
    -----BEGIN RSA PRIVATE KEY-----
    Li4u
    -----END RSA PRIVATE KEY-----

# sessionSecret is used for signing and encrytion of session data
sessionSecret: ~
oidc:
  issuerUrl: https://identity.ingress.example.org
  # clientId is the public identifier of the gardener-dashboard aplication
  clientId: dashboard
  # clientSecret is the private secret of the gardener-dashboard aplication
  clientSecret: ~
  # redirectUri is the endpoint receiving the OTAC from the OpenID provider after successful login
  redirectUri: https://dashboard.ingress.example.org/auth/callback

frontendConfig:
  landingPageUrl: https://github.com/gardener
  helpMenuItems:
  - title: Getting Started
    icon: description
    url: https://github.com/gardener/gardener/tree/master/docs
  - title: Issues
    icon: bug_report
    url: https://github.com/gardener/gardener/issues
  gitHubRepoUrl: https://foo-github.com/dummyorg/dummyrepo
  defaultHibernationSchedule:
    evaluation:
    - start: 00 17 * * 1,2,3,4,5
    development:
    - start: 00 17 * * 1,2,3,4,5
      end: 00 08 * * 1,2,3,4,5
    production: ~
  seedCandidateDeterminationStrategy: SameRegion
  # features:
  #   terminalEnabled: true
  # terminal:
  #   heartbeatIntervalSeconds: 60

gitHub:
  apiUrl: https://api.foo-github.com
  org: dummyorg
  repository: dummyrepo
  webhookSecret: foobar
  authentication:
    username: dashboard
    token: dummytoken

livenessProbe:
  enabled: true
  initialDelaySeconds: 15
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

# terminal:
#   containerImage: eu.gcr.io/gardener-project/gardener/ops-toolbelt:latest
#   containerImageOperator: ~ # if not defined, value of containerImage will be used
#   gardenTerminalHost: # cluster that hosts the terminal pods for the (virtual) garden cluster
#     apiServerIngressHost: api.example.org # is host in browser-trusted certificate. Optional, but required if using secretRef
#     secretRef:
#       namespace: garden # namespace, in which the secret for the gardenTerminalHost resides on the (virtual) garden cluster
#       labelSelector:
#       - runtime=gardenTerminalHost
#       # seedRef: my-soil # if set, you most likely want to disable gardenTerminalHost bootstrapping
#       # shootRef: # if set, you most likely want to disable gardenTerminalHost bootstrapping
#       #   name: myshoot
#       #   namespace: garden
#   garden: # (virtual) garden
#     operatorCredentials: # this is the credential used for operators for the (virtual) garden cluster, to create terminal session specific service accounts
#       serviceAccountRef: # serviceAccountRef or secretRef
#         name: dashboard-terminal-admin
#         namespace: garden
#   bootstrap:
#     disabled: true # indicates if bootstrapping resources required for the terminal feature is generally disabled
#     seedDisabled: false # indicates if bootstrapping resources for seeds is disabled, required for gardener operator terminals
#     shootDisabled: false # indicates if bootstrapping resources for shoots is disabled, required for enduser terminals
#     gardenTerminalHostDisabled: false # indicates if bootstrapping resources for the virtual garden terminal host cluster is disabled
#     apiServerIngress:
#       annotations:
#         kubernetes.io/ingress.class: nginx
#         nginx.ingress.kubernetes.io/backend-protocol: HTTPS
#         certmanager.k8s.io/cluster-issuer: lets-encrypt
#         certmanager.k8s.io/acme-challenge-type: dns01
#         certmanager.k8s.io/acme-dns01-provider: route53
#     queueOptions: ~ # here you can specify options like maxRetries, retryDelay https://github.com/diamondio/better-queue#new-queueprocess-options
#     gardenTerminalHost:
#       namespace: garden # namespace, in which the tls-secret, ingress and headless service should be created in
#       apiServerIngress:
#         annotations:
#           kubernetes.io/ingress.class: nginx
#           nginx.ingress.kubernetes.io/backend-protocol: HTTPS
#       apiServerTls: # Optional. Needs to be a browser-trusted certificate!
#         crt: |
#           -----BEGIN CERTIFICATE-----
#           Li4u
#           -----END CERTIFICATE-----
#           -----BEGIN CERTIFICATE-----
#           Li4u
#           -----END CERTIFICATE-----
#         key: |
#           -----BEGIN RSA PRIVATE KEY-----
#           Li4u
#           -----END RSA PRIVATE KEY-----
