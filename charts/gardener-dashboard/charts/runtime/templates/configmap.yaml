# SPDX-FileCopyrightText: 2021 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: gardener-dashboard-configmap
  namespace: {{ .Release.Namespace }}
  labels:
    app: gardener-dashboard
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  login-config.json: |
    {
       "landingPageUrl": {{ quote .Values.global.frontendConfig.landingPageUrl }},
       {{- if .Values.global.oidc }}
       "loginTypes": ["oidc", "token"]
       {{- else }}
       "loginTypes": ["token"]
       {{- end }}
    }
  config.yaml: |
    ---
    port: {{ .Values.global.containerPort }}
    logLevel: {{ .Values.global.logLevel }}
    logFormat: text
    apiServerUrl: {{ required ".Values.global.apiServerUrl is required" .Values.global.apiServerUrl }}
    {{- if .Values.global.apiServerCaData }}
    apiServerCaData: {{ .Values.global.apiServerCaData }}
    {{- else if .Values.global.apiServerCa }}
    apiServerCaData: {{ b64enc .Values.global.apiServerCa }}
    {{- else if eq (default false .Values.global.apiServerSkipTlsVerify) true }}
    apiServerSkipTlsVerify: true
    {{- end }}
    {{- if .Values.global.tokenRequestAudiences }}
    tokenRequestAudiences:
      {{- range .Values.global.tokenRequestAudiences }}
      - {{ . }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.clusterIdentity }}
    clusterIdentity: {{ .Values.global.clusterIdentity }}
    {{- end }}
    readinessProbe:
      periodSeconds: {{ .Values.global.readinessProbe.periodSeconds }}
    {{- if .Values.global.gitHub }}
    gitHub:
      apiUrl: {{ .Values.global.gitHub.apiUrl }}
      {{- if .Values.global.gitHub.ca }}
      ca: {{ quote .Values.global.gitHub.ca }}
      {{- end }}
      org: {{ .Values.global.gitHub.org }}
      repository: {{ .Values.global.gitHub.repository }}
      {{- if .Values.global.gitHub.pollIntervalSeconds }}
      pollIntervalSeconds: {{ .Values.global.gitHub.pollIntervalSeconds }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.unreachableSeeds }}
    unreachableSeeds:
      {{- with .Values.global.unreachableSeeds.matchLabels }}
      matchLabels:
{{ toYaml . | trim | indent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.oidc }}
    oidc:
      issuer: {{ required ".Values.global.oidc.issuerUrl is required" .Values.global.oidc.issuerUrl }}
      {{- if .Values.global.oidc.usePKCE }}
      usePKCE: true
      {{- end }}
      {{- if .Values.global.oidc.sessionLifetime }}
      sessionLifetime: {{ .Values.global.oidc.sessionLifetime }}
      {{- end }}
      redirect_uris:
      {{- $protocol := ternary "http" "https" ( empty .Values.global.ingress.tls ) }}
      {{- range .Values.global.ingress.hosts }}
      - "{{ $protocol }}://{{ . }}/auth/callback"
      {{- end }}
      {{- if .Values.global.oidc.scope }}
      scope: {{ .Values.global.oidc.scope }}
      {{- else }}
      scope: "openid email profile groups audience:server:client_id:{{ .Values.global.oidc.clientId }} audience:server:client_id:kube-kubectl"
      {{- end }}
      {{- if hasKey .Values.global.oidc "rejectUnauthorized" }}
      rejectUnauthorized: {{ .Values.global.oidc.rejectUnauthorized }}
      {{- else }}
      rejectUnauthorized: true
      {{- end }}
      {{- if .Values.global.oidc.ca }}
      ca: {{ quote .Values.global.oidc.ca }}
      {{- end }}
      {{- if .Values.global.oidc.clockTolerance }}
      clockTolerance: {{ .Values.global.oidc.clockTolerance }}
      {{- end }}
      {{- if .Values.global.oidc.public }}
      public:
        clientId: {{ .Values.global.oidc.public.clientId | default "kube-kubectl" }}
        {{- if .Values.global.oidc.public.clientSecret }}
        clientSecret: {{ .Values.global.oidc.public.clientSecret }}
        {{- end }}
        {{- if or .Values.global.oidc.public.usePKCE (not .Values.global.oidc.public.clientSecret) }}
        usePKCE: true
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.terminal }}
    terminal:
      container:
        image: {{ .Values.global.terminal.container.image }}
      {{- if .Values.global.terminal.containerOperator }}
      {{- if .Values.global.terminal.containerOperator.image }}
      containerOperator:
        image: {{ .Values.global.terminal.containerOperator.image }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.terminal.containerImageDescriptions }}
      containerImageDescriptions:
      {{- range .Values.global.terminal.containerImageDescriptions }}
      - image: {{ .image }}
        description: {{ .description }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.terminal.serviceAccountTokenExpiration }}
      serviceAccountTokenExpiration: {{ .Values.global.terminal.serviceAccountTokenExpiration }}
      {{- end }}
      gardenTerminalHost:
        {{- if .Values.global.terminal.gardenTerminalHost.secretRef }}
        apiServerIngressHost: {{ .Values.global.terminal.gardenTerminalHost.apiServerIngressHost }}
        secretRef:
          namespace: {{ .Values.global.terminal.gardenTerminalHost.secretRef.namespace }}
          {{- with .Values.global.terminal.gardenTerminalHost.secretRef.labelSelector }}
          labelSelector:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.global.terminal.gardenTerminalHost.seedRef }}
        seedRef: {{ .Values.global.terminal.gardenTerminalHost.seedRef }}
        {{- end }}
        {{- if .Values.global.terminal.gardenTerminalHost.shootRef }}
        shootRef:
          name: {{ .Values.global.terminal.gardenTerminalHost.shootRef.name }}
          namespace: {{ .Values.global.terminal.gardenTerminalHost.shootRef.namespace }}
        {{- end }}
      garden:
        operatorCredentials:
{{ toYaml .Values.global.terminal.garden.operatorCredentials | trim | indent 10 }}
      {{- if .Values.global.terminal.bootstrap }}
      bootstrap:
        disabled: {{ .Values.global.terminal.bootstrap.disabled | default false }}
        {{- if ne .Values.global.terminal.bootstrap.disabled true }}
        seedDisabled: {{ .Values.global.terminal.bootstrap.seedDisabled | default false }}
        shootDisabled: {{ .Values.global.terminal.bootstrap.shootDisabled | default false }}
        gardenTerminalHostDisabled: {{ .Values.global.terminal.bootstrap.gardenTerminalHostDisabled | default false }}
        {{- if .Values.global.terminal.bootstrap.apiServerIngress }}
        apiServerIngress:
          {{- with .Values.global.terminal.bootstrap.apiServerIngress.annotations }}
          annotations:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.global.terminal.bootstrap.queueOptions }}
        queueOptions:
{{ toYaml .Values.global.terminal.bootstrap.queueOptions | trim | indent 10 }}
        {{- end }}
        {{- if ne .Values.global.terminal.bootstrap.gardenTerminalHostDisabled true }}
        gardenTerminalHost:
          namespace: {{ .Values.global.terminal.bootstrap.gardenTerminalHost.namespace }}
          apiServerIngress:
            {{- with .Values.global.terminal.bootstrap.gardenTerminalHost.apiServerIngress.annotations }}
            annotations:
{{ toYaml . | trim | indent 14 }}
            {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    frontend:
      {{- if .Values.global.frontendConfig.helpMenuItems }}
      helpMenuItems:
      {{- range .Values.global.frontendConfig.helpMenuItems }}
      - title: {{ .title }}{{- if .icon }}
        icon: {{ .icon }}{{- end }}
        url: {{ .url }}{{- if .target }}
        target: {{ .target }}{{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.externalTools }}
      externalTools:
      {{- range .Values.global.frontendConfig.externalTools }}
      - title: {{ .title }}{{- if .icon }}
        icon: {{ .icon }}{{- end }}
        url: {{ .url }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.ticket }}
      ticket:
        {{- if .Values.global.frontendConfig.ticket.hideClustersWithLabels }}
        hideClustersWithLabels:
          {{- range .Values.global.frontendConfig.ticket.hideClustersWithLabels }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .Values.global.frontendConfig.ticket.newTicketLabels }}
        newTicketLabels:
          {{- range .Values.global.frontendConfig.ticket.newTicketLabels }}
          - {{ . }}
          {{- end }}
        {{- end }}
        gitHubRepoUrl: {{ .Values.global.frontendConfig.ticket.gitHubRepoUrl }}
        avatarSource: {{ .Values.global.frontendConfig.ticket.avatarSource | default "github" }}
        issueDescriptionTemplate: {{ quote .Values.global.frontendConfig.ticket.issueDescriptionTemplate }}
      {{- end }}
      features:
        terminalEnabled: {{ .Values.global.frontendConfig.features.terminalEnabled | default false }}
        projectTerminalShortcutsEnabled: {{ .Values.global.frontendConfig.features.projectTerminalShortcutsEnabled | default false }}
      {{- if .Values.global.frontendConfig.terminal }}
      terminal:
        {{- if .Values.global.frontendConfig.terminal.heartbeatIntervalSeconds }}
        heartbeatIntervalSeconds: {{ .Values.global.frontendConfig.terminal.heartbeatIntervalSeconds }}
        {{- end }}
        {{- if .Values.global.frontendConfig.terminal.shortcuts }}
        shortcuts:
        {{- range .Values.global.frontendConfig.terminal.shortcuts }}
        - title: {{ .title }}
          description: {{ .description }}
          target: {{ .target }}
          {{- if .container }}
          container:
            {{- if .container.image }}
            image: {{ .container.image }}
            {{- end }}
            {{- if .container.command }}
            command:
            {{- range .container.command }}
            - {{ . }}
            {{- end }}
            {{- end }}
            {{- if .container.args }}
            args:
            {{- range .container.args }}
            - {{ . }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.defaultHibernationSchedule }}
      defaultHibernationSchedule:
{{ toYaml .Values.global.frontendConfig.defaultHibernationSchedule | trim | indent 8 }}
      {{- end }}
      {{- if .Values.global.frontendConfig.seedCandidateDeterminationStrategy }}
      seedCandidateDeterminationStrategy: {{ .Values.global.frontendConfig.seedCandidateDeterminationStrategy }}
      {{- end }}
      {{- if .Values.global.frontendConfig.alert }}
      alert:
        type: {{ .Values.global.frontendConfig.alert.type }}
        message: {{ .Values.global.frontendConfig.alert.message }}
        {{- if .Values.global.frontendConfig.alert.identifier }}
        identifier: {{ .Values.global.frontendConfig.alert.identifier }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.costObject }}
      costObject:
        title: {{ .Values.global.frontendConfig.costObject.title }}
        description: {{ .Values.global.frontendConfig.costObject.description }}
        regex: {{ .Values.global.frontendConfig.costObject.regex }}
        errorMessage: {{ .Values.global.frontendConfig.costObject.errorMessage }}
      {{- end }}
      {{- if .Values.global.frontendConfig.sla }}
      sla:
        title: {{ .Values.global.frontendConfig.sla.title }}
        description: {{ quote .Values.global.frontendConfig.sla.description }}
      {{- end }}
      {{- if .Values.global.frontendConfig.accessRestriction }}
      accessRestriction:
        {{- if  .Values.global.frontendConfig.accessRestriction.noItemsText }}
        noItemsText: {{ quote .Values.global.frontendConfig.accessRestriction.noItemsText }}
        {{- end }}
        items:
        {{- range .Values.global.frontendConfig.accessRestriction.items }}
        - key: {{ .key }}
          display:
            visibleIf: {{ .display.visibleIf }}{{- if .display.title }}
            title: {{ .display.title }}{{- end }}{{- if .display.description }}
            description: {{ .display.description }}{{- end }}
          input:
            title: {{ quote .input.title }}
            {{- if .input.description }}
            description: {{ quote .input.description }}
            {{- end }}
            {{- if .input.inverted }}
            inverted: {{ .input.inverted }}
            {{- end }}
          {{- if .options }}
          options:
          {{- range .options }}
          - key: {{ .key }}
            display:
              visibleIf: {{ .display.visibleIf }}{{- if .display.title }}
              title: {{ .display.title }}{{- end }}{{- if .display.description }}
              description: {{ .display.description }}{{- end }}
            input:
              title: {{ quote .input.title }}
              {{- if .input.description }}
              description: {{ quote .input.description }}
              {{- end }}
              {{- if .input.inverted }}
              inverted: {{ .input.inverted }}
              {{- end }}
          {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.themes }}
      themes:
        {{- if .Values.global.frontendConfig.themes.light }}
          {{- with .Values.global.frontendConfig.themes.light }}
          light:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.global.frontendConfig.themes.dark }}
          {{- with .Values.global.frontendConfig.themes.dark }}
          dark:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.vendorHints }}
      vendorHints:
        {{- range .Values.global.frontendConfig.vendorHints }}
        - matchNames: {{ toJson .matchNames }}
          message: {{ quote .message }}
          {{- if .severity }}
          severity: {{ .severity }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.frontendConfig.gardenctl }}
      gardenctl:
        legacyCommands: {{ .Values.global.frontendConfig.gardenctl.legacyCommands | default false }}
      {{- end }}
      {{- if .Values.global.frontendConfig.defaultNodesCIDR }}
      defaultNodesCIDR: {{ .Values.global.frontendConfig.defaultNodesCIDR }}
      {{- end }}
      {{- if .Values.global.frontendConfig.serviceAccountDefaultTokenExpiration }}
      serviceAccountDefaultTokenExpiration: {{ .Values.global.frontendConfig.serviceAccountDefaultTokenExpiration }}
      {{- end }}